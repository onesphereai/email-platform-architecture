MVP Scope [WIP] 1. Purpose 2. Background & Problem Statement Key Drivers Interested customers 3. Goals and Success Metrics for the MVP Internal goals 1. Create a proof of concept MVP that we [Growth team] can present to customers for feedback. 2. We [Growth team] can set up and send Adam's MD Christmas message from scratch to all staff in our new email platform. 4. MVP Scope Users can design, configure and send a one-off email and view basic reporting on the performance of that email. Customer Use Case Fictional MVP Use Case Core Capabilities Out of Scope (for MVP) 5. Long-term scope 6. User Stories 7. Information Architecture 8. Design 9. Technical Considerations SMTP Drag&drop builder Component Library General requirement 10. Risks & Mitigations 111. Project Team 1. Purpose To provide our B2B customers to have a self-serve tool to create, send and manage email jobs & campaigns (and automations) for independent, fast-paced and irregular communication needs aside from our existing file-processed email capabililty and self-serve SMS/MMS capability. 2. Background & Problem Statement Currently, customers can send SMS and MMS campaigns but require separate tools for emails, creating a fragmented experience. By adding an email functionality in Message Centre, we allow users to manage their messaging strategy across multiple channels in one place. Key Drivers One tool to manage all communication Vision: one-stop shop for all customer communication: Print, Email, SMS/MMS, RCS, ... Reporting across channels in one tool Possibility for cross-channel campaigns e.g., send SMS to specific recipients where email has bounced Self-management Once onboarded, clients can implement new integrations, add automations, send campaigns, adjust templates, .. without FBDMS Interested customers Philips (Proma Farheen) Dulux (Antony Bayne) EastLink (Antony Bayne) .... 3. Goals and Success Metrics for the MVP Internal goals 1. Create a proof of concept MVP that we [Growth team] can present to customers for feedback. 2. We [Growth team] can set up and send Adam's MD Christmas message from scratch to all staff in our new email platform. 4. MVP Scope Users can design, configure and send a one-off email and view basic reporting on the performance of that email. Our MVP shall have the barebones features required to achieve this goal - the focus is getting this a quickly as possible in front of customers to generate interest and feedback. From there, we will be adding more 'saleable' features prioritised on customer interest and feedback. Customer Use Case Fictional MVP Use Case Sarah, a marketing manager at a utility company, wants to notify 100,000 customers about a planned outage. She uses our platform to design an email with a header image and a call-to-action button in the utility comapnys' brand colours, uploads a CSV of customer emails, previews the email, schedules it for tomorrow, and reviews delivery and open metrics afterward. Core Capabilities Functional Self-serve creation of a one-off email campaign (simple send) Visual drag-and-drop email builder (text, image, button, layout blocks etc.) HTML and Plain text email builder Use of variables from data in email template Recipient list upload (CSV) or manual entry Validation similar to SMS Send immediately or schedule for late Throttling & Delivery windows Selection of Sender Email preview across device types (desktop/mobile) Save draft emails Send test emails Basic email reporting New search page New summary page Delivery status Open rate Click rate (for links) Detailed reporting page Basic email in flight Settings Definition of customer-specific sender address Outgoing email address Reply to email address Bounce email address Validation status of sender address (SPF, DKIM, DMARC) Definition of customer brand styles (colours, fonts, buttons) that will be used for all of a cusotmers emails Non-functional Development of Message Centre (API, MC, Contact Management, Email2SMS and File Processor) need to be able to continued without interferring with the develpment of the email capabilities. Creation of a new navigation for MC (MVP nav likely to be different from later versions) Integration into exsting MC user role and group concept we can establish new roles, but it fit into the same concept Performance: []emails / hour Uptime: Out of Scope (for MVP) Functional Open API Opt-out management Campaign automation via API CRM integrations (e.g. Salesforce) Contact Management Unsubscriber and marketing features Template library and management template management for automation template management to use for one-off sends File upload Brand management / multi-brand handling Brand template Saved brand assets (footers, headers etc.) Avanced business logic (e.g if statements etc.) Advanced reporting Email preview through different simulated email clients Code editing Combined email and SMS dashboard A/B testing In-depth analytics (e.g. heatmaps) Workflow logic between SMS and email Email notification on campaign status .... Technical Intergate without own SMTP server Replace existing tools used by DDT team .... 5. Long-term scope This MVP is only a very first basic version of the full capability we strive for - it is not intended to be saleable product with all the features that a customer mgiht need. While we want to focus on having a first, presentable MVP ready as soon as possible, we should keep in mind the long-term scope when designing the architecture, to avoid time-consuming rebuilts further down the track. Future features include API connection, that clients can integrate into their existing tech stack Opt-out management Campaign automation via API Marketing features Unsubscriber management Asset management CRM integrations (e.g. Salesforce). Template library and management. Brand management / multi-brand handling A/B testing In-depth analytics (e.g. heatmaps) Workflow logic between SMS and email Email notification on campaign status .... 7. Information Architecture 8. Design 9. Technical Considerations SMTP As we want to have an MVP as fast as possible, we suggest to use Amazon SES and only later consider to intergate with our own, existing SMTP server. Drag&drop builder We suggest to review if we can use an open-source drag&drop email builder (for the MVP) to increase speed. suggest to do an investigate and estimate both approaches: build our own vs. customise an open-source Possible options https://grapesjs.com/#features https://apps.microsoft.com/detail/9ncqc2lbm6tv?hl=en-GB&gl=AU https://www.usewaypoint.com/open-source/emailbuilderjs (https://www.reddit.com/r/webdev/comments/1bgev8r /introducing_emailbuilderjs_a_free_and_opensource/?rdt=62041) https://unlayer.com/email-builder Detailed requirement for the drag & drop builder In addition, the drag and drop template builder has been designed with the Cerberus responsive email patterns in mind. Component Library We suggest to use this project as a pilot to introduce a component library into our build process. As one of our mission for our product is "excellent user experience", we want to ensure that we provide our customers a consistent visual experience across all of our tools. Advantages of implementing a component library Consistency Ensures a uniform look and feel across all applications. Reduces UI/UX bugs and design drift. Faster Development Reuse instead of rebuild—saves time on repetitive UI tasks. Developers can focus more on logic than styling. Scalability Easily supports new teams or projects without reinventing the wheel. Improved Collaboration Shared language between designers and developers. Encourages design systems adoption. Maintainability Central place for updates (e.g., changing a button style updates everywhere). Starting with this email feature, we would slowly expand the component library into other porducts such as SMS Message Centre, Online Forms /Workflows, ViewDocs. Suggested tool https://storybook.js.org/ General requirement Ensure spam compliance (CAN-SPAM, AU Spam Act) Implement domain authentication (SPF, DKIM, DMARC) Secure data storage with Australian data sovereignty Monitor IP/domain reputation and deliverability Implement error handling for invalid email addresses and failed uploads 10. Risks & Mitigations 111. Project Team Further Stakeholders Vinit Pandit (ASD Ressource allocation) ..... 